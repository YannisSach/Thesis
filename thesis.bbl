\providecommand\nbibitem[5][]{\bibitem[#1]{#2}}
\begin{thebibliography}{PARO17b}

\nbibitem[Abdu14]{AbdullaAronisJohnssonSagonasDPOR2014}{}{}{}
Parosh Abdulla, Stavros Aronis, Bengt Jonsson and Konstantinos Sagonas,
\newblock ``Optimal Dynamic Partial Order Reduction'',
\newblock in {\em Proceedings of the 41st ACM SIGPLAN-SIGACT Symposium on
  Principles of Programming Languages}, POPL '14, pp.\ 373--384, New York, NY,
  USA, 2014, ACM.

\nbibitem[Abdu15]{AbdullaAronisAtigJonssonLeonardssonSagonasSMC2015}{}{}{}
Parosh~Aziz Abdulla, Stavros Aronis, Mohamed~Faouzi Atig, Bengt Jonsson, Carl
  Leonardsson and Konstantinos Sagonas,
\newblock ``Stateless Model Checking for TSO and PSO'',
\newblock in {\em Proceedings of the 21st International Conference on Tools and
  Algorithms for the Construction and Analysis of Systems - Volume 9035}, pp.\
  353--367, New York, NY, USA, 2015, Springer-Verlag New York, Inc.

\nbibitem[Ahme15]{McKenneyAhmedGroceJensenMutationASE2015}{}{}{}
Iftekhar Ahmed, Alex Groce, Carlos Jensen and Paul~E. McKenney,
\newblock ``How Verified is My Code? Falsification-Driven Verification'',
\newblock in {\em 30th IEEE/ACM International Conference on Automated Software
  Engineering (ASE)}, pp.\ 737--748, November 2015.

\nbibitem[Algl13]{PORinBMC}{}{}{}
Jade Alglave, Daniel Kroening and Michael Tautschnig,
\newblock ``Partial Orders for Efficient Bounded Model Checking of Concurrent
  Software'',
\newblock in {\em Proceedings of the 25th International Conference on Computer
  Aided Verification}, pp.\ 141--157, 2013.

\nbibitem[AMDC]{AMDCNQ}{}{}{}
``Cool'n'Quiet''.
\newblock Available: \url{https://en.wikipedia.org/wiki/Cool%27n%27Quiet}.

\nbibitem[Beye15]{TACAS2015}{}{}{}
Dirk Beyer,
\newblock ``Rules for 4th Intl. Competition on Software Verification'',
\newblock in {\em 21st International Conference on Tools and Algorithms for the
  Construction and Analysis of Systems (TACAS)}, 4 2015.
\newblock Available: \url{https://sv-comp.sosy-lab.org/2015/rules.php}.

\nbibitem[Bier03]{BoundedModelChecking}{}{}{}
Armin Biere, Alessandro Cimatti, Edmund~M. Clarke, Ofer Strichman and Yunshan
  Zhu,
\newblock ``Bounded Model Checking'',
\newblock {\em Advances in Computers}, vol.~58, 2003.

\nbibitem[Chri13]{Chri13}{}{}{}
Maria Christakis, Alkis Gotovos and Konstantinos Sagonas,
\newblock ``Systematic Testing for Detecting Concurrency Errors in Erlang
  Programs'',
\newblock in {\em Sixth IEEE International Conference on Software Testing,
  Verification and Validation (ICST 2013)}, pp.\ 154--163, Los Angeles, CA,
  USA, 2013, IEEE Computer Society.

\nbibitem[Clan]{ClangAtomics}{}{}{}
``LLVM Atomic Instructions and Concurrency Guide''.
\newblock Available: \url{http://llvm.org/docs/Atomics.html#libcalls-atomic}.

\nbibitem[Clar04]{CBMC}{}{}{}
Edmund Clarke, Daniel Kroening and Flavio Lerda,
\newblock ``A tool for checking ANSI-C programs'',
\newblock in {\em Tools and Algorithms for the Construction and Analysis of
  Systems}, pp.\ 168--176, Springer, 2004.

\nbibitem[Coon13]{BPOR}{}{}{}
McKinley Kathryn~S. Coons Katherine~E., Musuvathi~Madanlal,
\newblock ``Bounded Partial Order Reduction'', October 2013.
\newblock Available: \url{http://lwn.net/Articles/262464/}.

\nbibitem[Desn09]{MathieuDesnoyersPhD}{}{}{}
Mathieu Desnoyers,
\newblock {\em Low-Impact Operating System Tracing},
\newblock Ph.D.\ thesis, Ecole Polytechnique de Montr\'{e}al, December 2009.
\newblock Available:
  \url{http://www.lttng.org/pub/thesis/desnoyers-dissertation-2009-12.pdf}.

\nbibitem[Desn12]{Desnoyers2012}{}{}{}
Mathieu Desnoyers, Paul~E. McKenney, Alan~S. Stern, Michel~R. Dagenais and
  Jonathan Walpole,
\newblock ``User-Level Implementations of Read-Copy Update'',
\newblock {\em IEEE Trans. Parallel Distrib. Syst.}, vol.~23, no.~2, pp.\
  375--382, February 2012.

\nbibitem[Desn13]{Desnoyers2013}{}{}{}
Mathieu Desnoyers, Paul~E. McKenney and Michel~R. Dagenais,
\newblock ``Multi-core Systems Modeling for Formal Verification of Parallel
  Algorithms'',
\newblock {\em SIGOPS Oper. Syst. Rev.}, vol.~47, no.~2, pp.\ 51--65, July
  2013.

\nbibitem[Dijk]{EWD:EWD35}{}{}{}
Edsger~W. Dijkstra,
\newblock ``Over de sequentialiteit van procesbeschrijvingen''.
\newblock circulated privately.

\nbibitem[Dugg10]{Duggal2010}{}{}{}
Abhinav Duggal,
\newblock {\em Stopping Data Races Using Redflag},
\newblock Ph.D.\ thesis, Stony Brook University, 2010.

\nbibitem[Edmu99]{POR}{}{}{}
Orna~Grumberg Edmund M.~Clarke, Marius Minea and Doron~A. Peled,
\newblock ``State Space Reduction Using Partial Order Techniques'',
\newblock {\em International Journal on Software Tools for Technology
  Transfer}, vol.~2, no.~3, pp.\ 279--287, 1999.

\nbibitem[Flan05]{FlanaganDPOR}{}{}{}
Cormac Flanagan and Patrice Godefroid,
\newblock ``Dynamic Partial-order Reduction for Model Checking Software'',
\newblock in {\em Proceedings of the 32nd ACM SIGPLAN-SIGACT Symposium on
  Principles of Programming Languages}, POPL '05, pp.\ 110--121, New York, NY,
  USA, 2005, ACM.

\nbibitem[GCCA]{GCCAtomics}{}{}{}
``Built-in Functions for Memory Model Aware Atomic Operations''.
\newblock Available:
  \url{https://gcc.gnu.org/onlinedocs/gcc/_005f_005fatomic-Builtins.html}.

\nbibitem[Gode96]{Godefroid1996}{}{}{}
Patrice Godefroid,
\newblock {\em Partial-Order Methods for the Verification of Concurrent
  Systems: An Approach to the State-Explosion Problem},
\newblock Springer-Verlag New York, Inc., Secaucus, NJ, USA, 1996.

\nbibitem[Gode97]{SMC}{}{}{}
Patrice Godefroid,
\newblock ``Model checking for programming languages using VeriSoft'',
\newblock in {\em Proceedings of the 24th ACM SIGPLAN-SIGACT Symposium on
  Principles of Programming Languages}, pp.\ 147--186, 1997.

\nbibitem[Gode05]{Gode05}{}{}{}
Patrice Godefroid,
\newblock ``Software Model Checking: The VeriSoft Approach'',
\newblock {\em Formal Methods in System Design}, vol.~26, no.~2, pp.\ 77--101,
  2005.

\nbibitem[Gots13]{Gotsman2013}{}{}{}
Alexey Gotsman, Noam Rinetzky and Hongseok Yang,
\newblock ``Verifying Concurrent Memory Reclamation Algorithms with Grace'',
\newblock in {\em Proceedings of the 22nd European Conference on Programming
  Languages and Systems}, ESOP'13, pp.\ 249--269, Berlin, Heidelberg, 2013,
  Springer-Verlag.

\nbibitem[Inte]{IntelCStates}{}{}{}
``Power Management States: P-States, C-States, and Package C-States''.
\newblock Available:
  \url{https://software.intel.com/en-us/articles/power-management-states-p-states-c-states-and-package-c-states}.

\nbibitem[Kerna]{KernelNOHZ}{}{}{}
``NO\_HZ: Reducing Scheduling-Clock Ticks''.
\newblock Available:
  \url{https://www.kernel.org/doc/Documentation/timers/NO_HZ.txt}.

\nbibitem[Kernb]{KernelRCU}{}{}{}
``RCU Concepts''.
\newblock Available:
  \url{https://www.kernel.org/doc/Documentation/RCU/rcu.txt}.

\nbibitem[Koko17]{Spin}{}{}{}
Michalis Kokologiannakis and Konstantinos Sagonas,
\newblock ``Stateless Model Checking of the Linux Kernelâ€™s Hierarchical
  Read-Copy-Update (Tree RCU)'', July 2017.
\newblock Available: \url{https://arxiv.org/abs/1610.03052}.

\nbibitem[Lamp78]{Lamp}{}{}{}
Leslie Lamport,
\newblock ``Time, Clocks and Ordering of Events in Distributed Systems'', 1978.

\nbibitem[Linu]{LinuxKernel}{}{}{}
``The Linux kernel''.
\newblock \url{https://www.kernel.org/}.

\nbibitem[LKMLa]{LKMLAdditionalPatches}{}{}{}
``rcu: clean up locking for \ccode{->completed} and \ccode{->gpnum} fields''.
\newblock \url{https://lkml.org/lkml/2009/10/30/212}.

\nbibitem[LKMLb]{LKMLBugForcingInitialization}{}{}{}
``rcu: fix long-grace-period race between forcing and initialization''.
\newblock \url{https://lkml.org/lkml/2009/10/28/196}.

\nbibitem[LKMLc]{LKMLBugCompletedCounter}{}{}{}
``rcu: Fix synchronization for \ccode{rcu_process_gp_end()} uses of
  \ccode{->completed} counter''.
\newblock \url{https://lkml.org/lkml/2009/11/4/69}.

\nbibitem[Love10]{RobertLoveLKDed3}{}{}{}
Robert Love,
\newblock {\em Linux Kernel Development},
\newblock Addison-Wesley, 3rd edition, 2010.

\nbibitem[McKe]{RCULinuxUsage}{}{}{}
Paul~E. McKenney,
\newblock ``RCU Linux Usage''.
\newblock Available:
  \url{http://www.rdrop.com/users/paulmck/RCU/linuxusage.html}.

\nbibitem[McKe98]{McKenney98}{}{}{}
Paul~E. McKenney and John~D. Slingwine,
\newblock ``Read-Copy Update: Using Execution History to Solve Concurrency
  Problems'',
\newblock in {\em {Parallel and Distributed Computing and Systems}}, pp.\
  509--518, Las Vegas, NV, October 1998.

\nbibitem[McKe07a]{PaulEMcKenney2007PreemptibleRCU}{}{}{}
Paul~E. McKenney,
\newblock ``The design of preemptible read-copy-update''.
\newblock Available: \url{http://lwn.net/Articles/253651/}, October 2007.

\nbibitem[McKe07b]{PaulEMcKenney2007WhatIsRCUFundamentally}{}{}{}
Paul~E. McKenney and Jonathan Walpole,
\newblock ``What is {RCU}, Fundamentally?''.
\newblock Available: \url{http://lwn.net/Articles/262464/}, December 2007.

\nbibitem[McKe08a]{PaulEMcKenney2008HierarchicalRCU}{}{}{}
Paul~E. McKenney,
\newblock ``Hierarchical {RCU}''.
\newblock Available: \url{http://lwn.net/Articles/305782/}, November 2008.

\nbibitem[McKe08b]{PaulEMcKenney2008WhatIsRCUAPI}{}{}{}
Paul~E. McKenney,
\newblock ``{RCU} part 3: the {RCU} {API}''.
\newblock Available: \url{http://lwn.net/Articles/264090/}, January 2008.

\nbibitem[McKe08c]{PaulEMcKenney2008WhatIsRCUUsage}{}{}{}
Paul~E. McKenney,
\newblock ``What is {RCU}? Part 2: Usage''.
\newblock Available:, \url{http://lwn.net/Articles/263130/}, January 2008.

\nbibitem[McKe09]{McKenneyHeisenbugs2009}{}{}{}
Paul~E. McKenney,
\newblock ``Hunting Heisenbugs''.
\newblock Available: \url{http://paulmck.livejournal.com/14639.html}, 11 2009.

\nbibitem[McKe10]{PaulEMckenney2010TheRCUAPI}{}{}{}
Paul~E. McKenney,
\newblock ``The {RCU} {API}, 2010 Edition''.
\newblock Available: \url{http://lwn.net/Articles/418853/}, December 2010.

\nbibitem[McKe14]{PaulEMckenney2014TheRCUAPI}{}{}{}
Paul~E. McKenney,
\newblock ``The {RCU} {API}, 2014 Edition''.
\newblock Available: \url{http://lwn.net/Articles/609904/}, September 2014.

\nbibitem[McKe15]{McKenney2015}{}{}{}
Paul~E. McKenney,
\newblock ``Verification Challenge 4: Tiny RCU''.
\newblock Available: \url{http://paulmck.livejournal.com/39343.html}, 3 2015.

\nbibitem[Mich11]{Delay11}{}{}{}
Zvonimir~Rakamaric Michael~Emmi, Shaz~Qadeer,
\newblock ``Delay-Bounded Scheduling'',
\newblock {\em Proceeding of Principles of Programming Languages}, 2011.

\nbibitem[Mich18]{RCMC}{}{}{}
Konstantinos~Sagona Michalis~Kokologiannakis, Ori~Lahav and Victor Vafeiadis,
\newblock ``Effective Stateless Model Checking for C/C++ Concurrency'',
\newblock {\em Proceedings of the ACM on Programming Languages}, 2018.

\nbibitem[Musu07]{Musu07}{}{}{}
M.~Musuvathi and Qadder S.,
\newblock ``Iterative context bounding for systematic testing of multithreaded
  programs.'',
\newblock {\em ACM Conference on Programming Language Design and
  Implementation}, 2007.

\nbibitem[Musu08]{Musu08}{}{}{}
Mandanlal Musuvathi, Shaz Qadeer, Thomas Ball, Gerald Basler,
  Piramanayagam~Arumuga Nainar and Iulian Neamtiu,
\newblock ``Finding and Reproducing Heisenbugs in Concurrent Programs'',
\newblock in {\em Proceedings of the 8th USENIX Symposium on Operating Systems
  Design and Implementation (OSDI '08)}, pp.\ 267--280, Berkeley, CA, USA,
  2008, USENIX Association.

\nbibitem[P97]{God97}{}{}{}
GODEFROID P. and PIROTTIN D.,
\newblock ``Refining dependencies improves partial-order verification
  methods'', 1997.

\nbibitem[Paro17a]{AbdM17}{}{}{}
Bengt~Jonsson Parosh~Abdulla, Stavros~Aronis and Konstantinos Sagonas,
\newblock ``Comparing Source Sets and Persistent Sets for Partial Order
  Reduction'', March 2017.
\newblock Available:
  \url{https://link.springer.com/chapter/10.1007/978-3-319-63121-9_26}.

\nbibitem[PARO17b]{AbdS17}{}{}{}
BENGT~JONSSON PAROSH AZIZ~ABDULLA, STAVROS~ARONIS and KONSTANTINOS SAGONAS,
\newblock ``Source Sets: A Foundation for Optimal Dynamic Partial Order
  Reduction'', September 2017.
\newblock Available:
  \url{https://www.researchgate.net/publication/319277772_Source_Sets_A_Foundation_for_Optimal_Dynamic_Partial_Order_Reduction}.

\nbibitem[Paro18]{JACM}{}{}{}
Bengt~Jonsson Parosh Aziz~Abdulla, Stavros~Aronis and Konstantinos Sagonas,
\newblock ``Effective Stateless Model Checking for C/C++ Concurrency'',
\newblock {\em Proceedings of the ACM on Programming Languages}, 2018.

\nbibitem[Paul16]{Thomson}{}{}{}
Adam~Betts Paul~Thomson, Alastair F.~Donaldson,
\newblock ``Concurrency Testing Using Controlled Schedulers: An Empirical
  Study'', March 2016.
\newblock Available:
  \url{http://www.doc.ic.ac.uk/~afd/homepages/papers/pdfs/2016/TOPC.pdf}.

\nbibitem[Pele93]{Peled1993}{}{}{}
Doron Peled,
\newblock ``All from One, One for All: On Model Checking Using
  Representatives'',
\newblock in {\em Proceedings of the 5th International Conference on Computer
  Aided Verification}, CAV '93, pp.\ 409--423, London, UK, UK, 1993,
  Springer-Verlag.

\nbibitem[Rela]{RelaxedMemoryConcurrency}{}{}{}
``Relaxed-Memory Concurrency''.
\newblock Available: \url{http://www.cl.cam.ac.uk/~pes20/weakmemory/}.

\nbibitem[RKur07]{Static1997}{}{}{}
M.~Minea D. Peled H.~Yenigun R.~Kurshan, V.~Levin,
\newblock ``Static Partial Order Reduction'',
\newblock 2007.

\nbibitem[Seys12]{Seyster2012}{}{}{}
Justin Seyster,
\newblock {\em Runtime Verification of Kernel-Level Concurrency Using
  Compiler-Based Instrumentation},
\newblock Ph.D.\ thesis, Stony Brook University, 2012.

\nbibitem[Spar]{Sparse}{}{}{}
``Sparse - a Semantic Parser for C''.
\newblock Available: \url{https://sparse.wiki.kernel.org/index.php/Main_Page}.

\nbibitem[Tass15]{Tassarotti2015}{}{}{}
Joseph Tassarotti, Derek Dreyer and Viktor Vafeiadis,
\newblock ``Verifying Read-copy-update in a Logic for Weak Memory'',
\newblock in {\em Proceedings of the 36th ACM SIGPLAN Conference on Programming
  Language Design and Implementation}, PLDI '15, pp.\ 110--120, New York, NY,
  USA, 2015, ACM.

\nbibitem[Valm91]{Valmari1991}{}{}{}
Antti Valmari,
\newblock ``Stubborn Sets for Reduced State Space Generation'',
\newblock in {\em Proceedings of the 10th International Conference on
  Applications and Theory of Petri Nets: Advances in Petri Nets 1990}, pp.\
  491--515, London, UK, UK, 1991, Springer-Verlag.

\nbibitem[Wikia]{WikipediaMemoryOrdering}{}{}{}
``Memory ordering''.
\newblock Available: \url{https://en.wikipedia.org/wiki/Memory_ordering}.

\nbibitem[Wikib]{WikipediaModelChecking}{}{}{}
``Model checking''.
\newblock Available: \url{https://en.wikipedia.org/wiki/Model_checking}.

\nbibitem[Wikic]{WikipediaRCU}{}{}{}
``Read-copy-update''.
\newblock Available: \url{https://en.wikipedia.org/wiki/Read-copy-update}.

\end{thebibliography}
